<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Daniel Correia</title><link>https://danreia.github.io/</link><description>Recent content on Daniel Correia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://danreia.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Projects</title><link>https://danreia.github.io/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danreia.github.io/projects/</guid><description> Causal Inference Google Cloud Platform Rust</description></item><item><title>About</title><link>https://danreia.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danreia.github.io/about/</guid><description/></item><item><title>Contact</title><link>https://danreia.github.io/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danreia.github.io/contact/</guid><description/></item><item><title>What do you want to make the computer do?</title><link>https://danreia.github.io/blog/what_do_you_want_to_make_the_computer_do/</link><pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate><guid>https://danreia.github.io/blog/what_do_you_want_to_make_the_computer_do/</guid><description>Over the last few months I have been digging into Rust (the programming language) and the more I use it the more time I want to invest in it. This is not a post about Rust but rather the thought process on getting started with a new programming language (or multiple languages) in a world where these languages are driving technologies like cloud services, blockchains and artificial intelligence. We live in a time where the frontier of modern technology is looking to solve problems that no longer appear to be solvable by a single person, so in learning a new language we are presented with a spectrum of opportunities that lie somewhere between programming &amp;ldquo;hello-world&amp;rdquo; and a distributed blockchain.</description></item><item><title>Ownership and Borrowing in Rust</title><link>https://danreia.github.io/til/rust/ownership/</link><pubDate>Tue, 12 Sep 2023 10:52:47 +0200</pubDate><guid>https://danreia.github.io/til/rust/ownership/</guid><description>Ownership and Borrowing in Rust Ownership The Book1 states the following as the three rules of ownership in Rust:
Each value in Rust has an owner. There can only be one owner at a time. When the owner goes out of scope, the value will be dropped. Going out of scope essentially means coming to the end of the trailing curly brace &amp;lsquo;}&amp;rsquo; of the one in which a value was introduced in.</description></item></channel></rss>